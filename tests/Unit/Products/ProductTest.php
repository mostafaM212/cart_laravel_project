<?php

namespace Tests\Unit\Products;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Database\Eloquent\Factory as Elequent ;
use Money\Money;
use PHPUnit\Framework\TestCase;
use App\Models\Category;
use App\Models\Product;
use App\Models\ProductVariation;
use PHPUnit\Framework\TestResult;


class ProductTest extends TestCase
{
        use RefreshDatabase ;
    /**
     * A basic unit test example.
     *
     * @return void
     */
//    public function setUp(): void
//    {
//        parent::setUp(); // TODO: Change the autogenerated stub
//        $this->app->make(Elequent::class)->load(__DIR__.'/cart/database/factories') ;
//    }
//    public function  run(TestResult $result = null): TestResult
//    {
//        factory(Product::class)->create(); // TODO: Change the autogenerated stub
//    }

    public function test_that_getRouteKeyName_returns_slug()
    {
        $product =new Product();

        $this->assertEquals('slug',$product->getRouteKeyName());
    }

//    public function test_it_has_many_categories(){
//
//        $product =factory(Product::class)->create() ;
//
//        $product->categories()->save([
//            factory(Category::class)->create()
//        ]);
//
//        $this->assertInstanceOf(Category::class,$product->categories->first());
//    }

//    public function test_it_has_many_variation(){
//       dd(factory(\App\Models\Product::class)->create())  ;
//        $product =factory(Product::class)->create();
//
//        $product->variations()->save([
//            factory(ProductVariation::class)->create()
//        ]);
//
//        $this->assertInstanceOf(ProductVariation::class,$product->variations->first());
//    }

    public function test_it_returns_money_instance_for_price(){
        $product =factory('\App\Models\Product')->create();

        $this->assertInstanceOf(Money::class,$product->price);
    }
}
